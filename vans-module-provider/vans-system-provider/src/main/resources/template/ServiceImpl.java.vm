package ${package}.provider.serviceimpl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import cn.com.guoqing.vans.common.api.Paging;

import java.util.List;

import ${package}.provider.mapper.${className}Mapper;
import ${package}.api.entity.${className}Entity;
import ${package}.api.service.I${className}Service;



@Service
@com.alibaba.dubbo.config.annotation.Service
@Transactional(readOnly = true)
public class ${className}ServiceImpl implements I${className}Service {
	@Autowired
	private ${className}Mapper ${classname}Mapper;
	
	@Override
	public ${className}Entity get(${pk.attrType} ${pk.attrname}){
		return ${classname}Mapper.get(${pk.attrname});
	}

    @Override
    public PageInfo<${className}Entity> find${className}Page(Paging page, ${className}Entity ${classname}){
        // 执行分页查询
        PageHelper.startPage(page.getPageNum(), page.getPageSize(), page.getOrderBy());

        List<${className}Entity> list = ${classname}Mapper.findList(${classname});
        return new PageInfo<>(list);
	}
	
	@Override
	@Transactional(readOnly = false)
	public int insert(${className}Entity ${classname}){
        return ${classname}Mapper.insert(${classname});
	}
	
	@Override
	@Transactional(readOnly = false)
	public int update(${className}Entity ${classname}){
		 return ${classname}Mapper.update(${classname});
	}
	
	@Override
	@Transactional(readOnly = false)
	public int deleteById(${pk.attrType} ${pk.attrname}){
        return ${classname}Mapper.deleteById(${pk.attrname});
	}
	
}
